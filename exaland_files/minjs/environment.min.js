var $jscomp={scope:{},checkStringArgs:function(a,c,b){if(null==a)throw new TypeError("The 'this' value for String.prototype."+b+" must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype."+b+" must not be a regular expression");return a+""}};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,c,b,e){if(c){b=$jscomp.global;a=a.split(".");for(e=0;e<a.length-1;e++){var f=a[e];f in b||(b[f]={});b=b[f]}a=a[a.length-1];e=b[a];c=c(e);c!=e&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("String.prototype.repeat",function(a){return a?a:function(a){var b=$jscomp.checkStringArgs(this,null,"repeat");if(0>a||1342177279<a)throw new RangeError("Invalid count value");a|=0;for(var c="";a;)if(a&1&&(c+=b),a>>>=1)b+=b;return c}},"es6-impl","es3");$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;
$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};
$jscomp.arrayIterator=function(a){var c=0;return $jscomp.iteratorPrototype(function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}})};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.array=$jscomp.array||{};
$jscomp.iteratorFromArray=function(a,c){$jscomp.initSymbolIterator();a instanceof String&&(a+="");var b=0,e={next:function(){if(b<a.length){var f=b++;return{value:c(f,a[f]),done:!1}}e.next=function(){return{done:!0,value:void 0}};return e.next()}};e[Symbol.iterator]=function(){return e};return e};$jscomp.polyfill("Array.prototype.keys",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a){return a})}},"es6-impl","es3");
var HLE={WORLD_WIDTH:6E3,WORLD_HEIGHT:400,WORLD_TILES:STATUS.ISMOBILE?128:512,TILE_SIZE:null,SEA_TILES:16,SEA_TILE_SIZE:null,PIXEL_RATIO_SCALE:.5,SCREEN_WIDTH_SCALE:1,SCREEN_HEIGHT_SCALE:1,DATE:new Date,CURRENT_HOUR:Math.sin((new Date).getHours()/23*Math.PI),FOG:!0,MIRROR:!1,WATER:!0,MAX_MOVE_SPEED:null,BASE_MOVE_SPEED:1,CENTER_PATH:!0,reactiveMoveSpeed:0,moveSpeed:0,acceleration:0,landMotion:new THREE.Vector3(0,0,0),landSeed:50,BASE_SEA_SPEED:2.5,CLOUDS_SPEED:1,MAX_MODELS_OUT:100,PARTICLE_MODELS_OUT:100,
reactiveSeaHeight:0,landZeroPoint:-20,landHeight:300,seaStepsCount:0,landStepsCount:0,CLOUDS_AMOUNT:200,FLORA_AMOUNT:1,MAX_FAUNA:50,connectedUsers:0,noiseSeed:0,noiseFrequency:1,noiseFrequency2:1,cameraHeight:0,smoothCameraHeight:10},HLC={palette:{colors:[new THREE.Color(16200704),new THREE.Color(15358015),new THREE.Color(16768034),new THREE.Color(5552598),new THREE.Color(16708314),new THREE.Color(8951704)],get:function(a){return this.colors[a]},getRandom:function(){return this.colors[Math.floor(Math.random()*
this.colors.length)]}},horizon:new THREE.Color(1118481),tempHorizon:new THREE.Color(1118481),land:new THREE.Color(8947848),sea:new THREE.Color(8947848),flora:new THREE.Color(1,1,0),fauna:new THREE.Color(1,0,0),clouds:new THREE.Color(1,1,1),UI:new THREE.Color(65297)},HL={audio:null,modelsLoadingManager:null,texturesLoadingManager:null,audioLoader:null,scene:null,renderer:null,camera:null,stereoEffect:null,VREffect:null,controls:null,clock:null,noise:null,mappedRenderer:null,mappedScene:null,geometries:{sky:null,
land:null,sea:null,seaHeights:null,clouds:null,fauna:null},materials:{sky:null,land:null,sea:null,water:null,mirror:null,clouds:null,flora:null,fauna:null,models:null},textures:{sky1:"assets/img/skybox2/sd1c_s.jpg",sky2:"assets/img/skybox2/sd2c_s.jpg",sky3:"assets/img/skybox2/nasa2.gif",land:"assets/img/white2x2.gif",sea:"assets/img/white2x2.gif",flora:"assets/img/white2x2.gif",fauna:"assets/img/white2x2.gif",water:"assets/img/waternormals5.jpg",land1:"assets/img/land/pattern/land_tex_1.png",land2:"assets/img/land/pattern/land_tex_2.png",
land3:"assets/img/land/pattern/land_tex_3.png",land4:"assets/img/land/pattern/land_tex_4.png",land5:"assets/img/land/pattern/land_tex_5.png",landSand:"assets/img/land/pattern/land_tex_base.png",whale:"assets/3dm/whale.jpg",ducky:"assets/3dm/ducky.png",airbus:"assets/3dm/airbus.png",helicopter:"assets/3dm/aurora.png",aurora:"assets/3dm/aurora.png",heartbomb:"assets/3dm/heartbomb.jpg",white:"assets/img/white2x2.gif",barrel:"assets/3dm/barrel.png",building5:"assets/img/white2x2.gif",building6:"assets/img/white2x2.gif",
motorola:"assets/3dm/motorola.jpg",chainsaw:"assets/3dm/chainsaw.png",crocodile:"assets/3dm/crocodile.jpg",dolphin:"assets/3dm/dolphin.png",elephant:"assets/3dm/elephant.jpg",garbage:"assets/3dm/garbage.jpg",moab:"assets/3dm/moab.png",orca:"assets/3dm/orca.png",stingray:"assets/3dm/stingray.png",turtle:"assets/3dm/turtle.jpg",walrus:"assets/3dm/walrus.jpg",brachio:"assets/3dm/brachiosaurus.jpg",trex:"assets/3dm/trex.png"},dynamicTextures:{stars:null,textbox:null},models:{whale:["assets/3dm/whale.obj",
5],ducky:["assets/3dm/ducky.obj",10],airbus:["assets/3dm/airbus.obj",8],aurora:["assets/3dm/aurora.obj",5],helicopter:["assets/3dm/helicopter.obj",4],heartbomb:["assets/3dm/heartbomb.obj",4],cube:["assets/3dm/cube.obj",5],motorola:["assets/3dm/motorola.obj",15],barrel:["assets/3dm/barrel.obj",5],chainsaw:["assets/3dm/chainsaw.obj",2],garbage:["assets/3dm/garbage.obj",5],moab:["assets/3dm/moab.obj",5],elephant:["assets/3dm/elephant.obj",20],crocodile:["assets/3dm/crocodile.obj",10],dolphin:["assets/3dm/dolphin.obj",
10],orca:["assets/3dm/orca.obj",10],stingray:["assets/3dm/stingray.obj",15],turtle:["assets/3dm/turtle.obj",25],walrus:["assets/3dm/walrus.obj",20],brachio:["assets/3dm/brachiosaurus.obj",5],trex:["assets/3dm/trex.obj",5]},modelsKeys:null,mGroups:{space:["aurora","airbus","helicopter","moab"],sea:"whale crocodile dolphin orca stingray turtle walrus".split(" "),bigfishes:["whale","dolphin","orca","walrus","brachio"],ducks:["ducky"],buildings:["building6"],waste:["barrel","garbage","moab"],civilization:"barrel garbage airbus helicopter aurora ducky".split(" "),
everything:"brachio whale ducky airbus aurora helicopter heartbomb cube barrel chainsaw garbage moab elephant crocodile dolphin orca stingray turtle walrus".split(" ")},dynamicModelsClones:{length:0},sky:null,land:null,sea:null,clouds:!0,flora:null,fauna:null,lights:{ambient:null,directional:null,sun:null}},HLEnvironment=function(){function a(){var a=new THREE.TextureLoader(HL.texturesLoadingManager),d;for(d in HL.textures)null!=HL.textures[d]?(h++,HL.textures[d]=a.load(HL.textures[d],function(a){return function(){g++;
HL.textures[a].wrapS=THREE.RepeatWrapping;HL.textures[a].wrapT=THREE.RepeatWrapping;HL.textures[a].repeat.set(1,1);g==h&&(HL.textures.length=g)}}(d))):delete HL.textures[d]}function c(){for(var a in HL.dynamicTextures)HL.dynamicTextures[a]=document.createElement("canvas"),HL.dynamicTextures[a].width=512,HL.dynamicTextures[a].height=512,HL.dynamicTextures[a].c=HL.dynamicTextures[a].getContext("2d"),HL.dynamicTextures[a].texture=new THREE.Texture(HL.dynamicTextures[a]),HL.dynamicTextures[a].texture.wrapS=
THREE.RepeatWrapping,HL.dynamicTextures[a].texture.wrapT=THREE.RepeatWrapping,HL.dynamicTextures[a].texture.name=a,HL.dynamicTextures[a].texture.magFilter=THREE.NearestFilter,HL.dynamicTextures[a].texture.minFilter=THREE.NearestFilter}function b(){if(++k==l){console.log("start HL.clock");HL.clock.start();var a=new Event("HLEload");console.log("assetLoadListener dispatching HLEload");window.dispatchEvent(a)}}function e(){HLE.TILE_SIZE=HLE.WORLD_WIDTH/HLE.WORLD_TILES;HLE.SEA_TILE_SIZE=HLE.WORLD_WIDTH/
HLE.SEA_TILES;HLE.MAX_MOVE_SPEED=Math.min(20,HLE.TILE_SIZE);HLE.BASE_MOVE_SPEED=HLE.WORLD_WIDTH/HLE.WORLD_TILES/2;HL.clock=new THREE.Clock(!1);HLE.noiseSeed=1E3*Math.random();HL.scene=new THREE.Scene;HLE.FOG&&!STATUS.WIREFRAME&&(HL.scene.fog=new THREE.Fog(HLC.horizon,.3*HLE.WORLD_WIDTH,.475*HLE.WORLD_WIDTH),HL.scene.fog.color=HLC.horizon);HL.camera=STATUS.CARDBOARD?new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,100*HLE.WORLD_WIDTH):new THREE.PerspectiveCamera(40,window.innerWidth/
window.innerHeight,1.1,100*HLE.WORLD_WIDTH);HL.cameraGroup=new THREE.Group;var a=Math.max(window.innerWidth,window.innerHeight);HL.cameraCompanion=new THREE.Mesh(new THREE.PlaneBufferGeometry(.6*a,.6*a,1,1),new THREE.MeshLambertMaterial({color:16777215,emissive:16777215,transparent:!0,side:THREE.FrontSide}));HL.cameraCompanion.regenerateGeometry=function(){HL.cameraCompanion.geometry=new THREE.PlaneBufferGeometry(.6*a,.6*a,1,1)};HL.cameraCompanion.position.z=-600;HL.cameraCompanion.renderOrder=1;
HL.cameraCompanion.visible=!0;HL.cameraGroup.add(HL.camera);HL.cameraGroup.add(HL.cameraCompanion);HL.cameraGroup.position.y=50;HL.scene.add(HL.cameraGroup);STATUS.CARDBOARD&&(THREE.WebGLRenderer.prototype.crop=function(a,d,b,c){this.setViewport(a,d,b,c);this.setScissor(a,d,b,c);this.setScissorTest(!0)});HL.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,preserveDrawingBuffer:!0});HL.renderer.setPixelRatio(HLE.PIXEL_RATIO_SCALE);HL.renderer.setSize(window.innerWidth,window.innerHeight);HL.renderer.autoClearColor=
!1;HL.renderer.domElement.style.imageRendering="pixelated";document.body.appendChild(HL.renderer.domElement);HL.glitchFBO=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat});HL.glitchScene=new THREE.Scene;HL.glitchCamera=new THREE.OrthographicCamera(innerWidth/-2,innerWidth/2,innerHeight/2,innerHeight/-2,1,1E3);HL.glitchCamera.position.z=10;HL.glitchPlane=new THREE.Mesh(new THREE.PlaneBufferGeometry(innerWidth,
innerHeight,1,1),new THREE.MeshBasicMaterial({color:16777215,map:HL.glitchFBO.texture}));HL.glitchPlane.material.onBeforeCompile=function(a){a.uniforms.amount={value:0};a.uniforms.iTime={value:0};a.fragmentShader="uniform float amount;\n uniform float iTime;\n"+a.fragmentShader;a.fragmentShader="\n          vec4 posterize(vec4 color, float numColors)\n          {\n              return floor(color * numColors - 0.5) / numColors;\n          }\n\n          vec2 quantize(vec2 v, float steps)\n          {\n              return floor(v * steps) / steps;\n          }\n\n          float dist(vec2 a, vec2 b)\n          {\n              return sqrt(pow(b.x - a.x, 2.0) + pow(b.y - a.y, 2.0));\n          }\n\n\n          "+
a.fragmentShader;a.fragmentShader=a.fragmentShader.replace("#include <map_fragment>","#ifdef USE_MAP\n\n            float nAmount = pow( amount, 2.0 ) / 2.0;\n\n            vec4 color = texture2D( map, vUv );\n            float t = mod(mod(iTime, nAmount * 100.0 * ( nAmount - 0.5)) * 100.0, 1.0);\n            vec2 pixel = amount / vec2( 500.0, 500.0);\n            // vec4 a = posterize( texture2D(map, quantize(vUv, 64.0 * t) + pixel * (color.rb - vec2(.5)) * 100.0), 6.0).rbga;\n            vec4 b = posterize( texture2D(map, quantize(vUv, 32.0 - t) + pixel * (color.gb - vec2(.5)) * 1000.0), 4.0).gbra;\n            vec4 c = posterize( texture2D(map, quantize(vUv, 16.0 + t) + pixel * (color.br - vec2(.5)) * 20.0), 3.0).bgra;\n\n            vec4 a = color.rgba;\n            // vec4 b = color.gbra;\n            // vec4 c = color.bgra;\n\n          \t// vec4 texelColor = mix(\n            //           texture2D(map,\n            //                           vUv + nAmount * ( quantize( (a * t - b + c - (t + t / 2.0) / 10.0).rg, 8.0) - vec2(.5)) * 100.0),\n            //                 (a + b + c) / 3.0,\n            //                 (0.5 - (dot(color, color) - 1.5)) * amount);\n\n            vec4 texelColor = mix(\n                      texture2D(map, vUv + nAmount * ( quantize( (a * t - b + c - (t + t / 2.0) / 10.0).rg, 8.0) - vec2(.5)) * 100.0),\n                            (color) ,\n                            (0.5 - (dot(color, color) - 1.5)) * nAmount);\n\n          \tdiffuseColor *= texelColor;\n\n          #endif ");
HL.glitchPlane.material.materialShader=a};HL.glitchScene.add(HL.glitchPlane);if(STATUS.MAPPED){HL.mappingCoords=JSON.parse(localStorage.getItem("HYPERLAND_SCREEN_MAPPING_COORDS"));HL.mappingScreenGeometry=new THREE.PlaneGeometry(200,200,1,1);for(var d=0;d<HL.mappingScreenGeometry.vertices.length;d++)HL.mappingScreenGeometry.vertices[d].x=HL.mappingCoords[d].x,HL.mappingScreenGeometry.vertices[d].y=HL.mappingCoords[d].y,HL.mappingScreenGeometry.vertices[d].z=HL.mappingCoords[d].z;for(d=0;2>d;d++)for(var b=
0;3>b;b++)HL.mappingScreenGeometry.faceVertexUvs[0][d][b].y=1-HL.mappingScreenGeometry.faceVertexUvs[0][d][b].y;HL.mappingScreenGeometry.verticesNeedUpdate=!0;HL.mappingScreenGeometry.uvsNeedUpdate=!0;HL.mappingScreenGeometry.computeBoundingBox();HL.mappingRenderTarget=new THREE.WebGLRenderTarget(HL.mappingScreenGeometry.boundingBox.max.x-HL.mappingScreenGeometry.boundingBox.min.x,HL.mappingScreenGeometry.boundingBox.max.y-HL.mappingScreenGeometry.boundingBox.min.y,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,
format:THREE.RGBFormat,stencilBuffer:!1});HL.mappingScene=new THREE.Scene;HL.mappingScreen=new THREE.Mesh(HL.mappingScreenGeometry,new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide,map:HL.mappingRenderTarget.texture}));HL.mappingScene.add(HL.mappingScreen);HL.mappingCamera=new THREE.OrthographicCamera(-window.innerWidth/2,window.innerWidth/2,-window.innerHeight/2,window.innerHeight/2,1,1E4);HL.mappingCamera.position.z=5E3}STATUS.CARDBOARD?(HL.camera.fov=50,HL.camera.focus=.5*HLE.WORLD_WIDTH,
HL.camera.updateProjectionMatrix(),HL.stereoEffect=new THREE.StereoEffect(HL.renderer),HL.stereoEffect.setSize(window.innerWidth,window.innerHeight)):STATUS.VR&&(HL.VREffect=new THREE.VREffect(HL.renderer),HL.VREffect.setSize(window.innerWidth,window.innerHeight));console.log("controls");STATUS.VR?HL.controls=new THREE.VRControls(HL.cameraGroup):STATUS.FPC?(HL.controls=new THREE.FirstPersonControls(HL.cameraGroup,HL.renderer.domElement),HL.controls.invertY=!0,HL.controls.movementSpeed=0,HL.controls.lookSpeed=
.045,HL.controls.dragToLook=!1,HL.controls.constrainVertical=!0,HL.controls.verticalMin=Math.PI/4,HL.controls.verticalMax=Math.PI/1.5):STATUS.ISMOBILE?HL.controls=new THREE.DeviceOrientationControls(HL.cameraGroup):STATUS.REMIDI&&(HL.controls=new THREE.RemidiControls(HL.cameraGroup))}function f(){HL.geometries.sky=new THREE.SphereBufferGeometry(.5*HLE.WORLD_WIDTH-50,64,64);HL.geometries.land=new THREE.PlaneBufferGeometry(HLE.WORLD_WIDTH,HLE.WORLD_WIDTH,HLE.WORLD_TILES,HLE.WORLD_TILES);HL.geometries.land.rotateX(-Math.PI/
2);HL.geometries.land.name="land-geometry";HLE.WATER?(HL.geometries.sea=new THREE.PlaneBufferGeometry(HLE.WORLD_WIDTH,HLE.WORLD_WIDTH,1,1),HL.geometries.sea.name="sea-water-geometry"):(HL.geometries.sea=new THREE.PlaneBufferGeometry(HLE.WORLD_WIDTH,HLE.WORLD_WIDTH,HLE.SEA_TILES,HLE.SEA_TILES),HL.geometries.sea.name="sea-geometry");HL.geometries.sea.rotateX(-Math.PI/2);HL.geometries.seaHeights=[];for(var a=0;a<HLE.WORLD_TILES;a++)HL.geometries.seaHeights[a]=1;HL.geometries.clouds=new THREE.BufferGeometry;
HL.geometries.clouds.name="clouds-geometry";HLH.initBufParticleSystem(HL.geometries.clouds,2*HLE.WORLD_WIDTH,HLE.WORLD_HEIGHT,HLE.CLOUDS_AMOUNT,!0,!0);HL.geometries.flora=new THREE.BufferGeometry;HL.geometries.flora.name="flora-geometry";HLH.initBufParticleSystem(HL.geometries.flora,HLE.WORLD_WIDTH,HLE.WORLD_HEIGHT,HLE.FLORA_AMOUNT,!1,!0);HL.geometries.fauna=new THREE.BufferGeometry;HL.geometries.fauna.name="fauna-geometry";HLH.initBufParticleSystem(HL.geometries.fauna,HLE.WORLD_WIDTH,.5*HLE.WORLD_HEIGHT,
HLE.MAX_FAUNA,!0,!0)}function m(){HL.materials.sky=new THREE.SkyShaderMaterial({wireframe:STATUS.WIREFRAME,wireframeLinewidth:2,map1:STATUS.WIREFRAME?null:!0,map2:STATUS.WIREFRAME?null:!0,map3:STATUS.WIREFRAME?null:!0});HL.materials.sky.uniforms.color.value=HLC.horizon;HL.materials.land=new THREE.LandShaderMaterial(HLE.WORLD_WIDTH,HLE.WORLD_TILES,{color:HLC.land,wireframe:STATUS.WIREFRAME,map:STATUS.WIREFRAME?null:new THREE.Texture,fog:!0,repeatUV:new THREE.Vector2(2,2),centerPath:HLE.CENTER_PATH,
side:THREE.DoubleSide,flatShading:!0,transparent:!1,hardMix:!0});HL.materials.land.uniforms.worldColor.value=HLC.horizon;HL.materials.land.uniforms.skyColor.value=HLC.horizon;HL.materials.land.uniforms.withCenterPath.value=HLE.CENTER_PATH;HL.materials.land.uniforms.advance.value=HLE.acceleration;HL.materials.land.uniforms.noiseFreq.value=HLE.noiseFrequency;HL.materials.land.uniforms.noiseFreq2.value=HLE.noiseFrequency2;HL.materials.land.uniforms.landHeight.value=1.3*HLE.landHeight;HL.materials.land.uniforms.landZeroPoint.value=
HLE.landZeroPoint;HLE.WATER||HLE.MIRROR||(HL.materials.sea=new THREE.MeshBasicMaterial({color:HLC.sea,fog:!0,wireframe:STATUS.WIREFRAME,wireframeLinewidth:2,transparent:!1,opacity:.9,alphaTest:.5}),HL.materials.sea.color=HLC.sea);HLE.MIRROR&&(HL.materials.mirror=new THREE.Mirror(HL.renderer,HL.camera,{clipBias:0,textureWidth:512,textureHeight:512,color:0,fog:!0,side:THREE.DoubleSide,worldWidth:HLE.WORLD_WIDTH,transparent:!1,opacity:1,wireframe:STATUS.WIREFRAME,wireframeLinewidth:2}),HL.materials.mirror.rotateX(-Math.PI/
2));HLE.WATER&&(HL.materials.water=new THREE.Water(HL.renderer,HL.camera,HL.scene,{textureWidth:STATUS.CARDBOARD?200:512,textureHeight:STATUS.CARDBOARD?200:512,noiseScale:.5,distortionScale:100,sunDirection:HL.lights.sun.position.normalize(),color:HLC.sea,opacity:.9,fog:!0,side:THREE.DoubleSide,blur:!0,wireframe:STATUS.WIREFRAME,wireframeLinewidth:2}),HL.materials.water.sunColor=HLC.horizon);HL.materials.clouds=new THREE.PointsMaterial({color:HLC.clouds,side:THREE.DoubleSide,opacity:1,transparent:!1,
size:STATUS.CARDBOARD||STATUS.VR?6:12,fog:!0,sizeAttenuation:!0,depthWrite:!0});HL.materials.clouds.color=HLC.clouds;for(var a in HL.models)HL.materials[a]=new THREE.MeshLambertMaterial({color:0,map:STATUS.WIREFRAME?null:new THREE.Texture,fog:!0,wireframe:STATUS.WIREFRAME,wireframeLinewidth:2,side:THREE.DoubleSide,transparent:!0,flatShading:!1}),HL.materials[a].color=new THREE.Color(16777215)}function n(){var a=new THREE.OBJLoader(HL.modelsLoadingManager,!1),d,b,c;for(c in HL.models)null!==HL.models[c]&&
(d=HL.models[c][0],b=HL.models[c][1],a.load(d,function(a,d){return function(b){HL.models[a]=new THREE.Mesh(b.children[0].geometry);HL.models[a].name=a;HL.models[a].geometry.scale(d,d,d);HL.models[a].geometry.computeBoundingBox();HL.models[a].size=new THREE.Vector3;HL.models[a].geometry.boundingBox.getSize(HL.models[a].size);HL.models[a].material=HL.materials[a];HL.scene.add(HL.models[a]);HLH.resetModel(HL.models[a])}}(c,b)));HL.modelsKeys=Object.keys(HL.models)}var h=0,g=0,l=2,k=0;return{init:function(){var g=
new Event("HLAssetLoaded");HL.texturesLoadingManager=new THREE.LoadingManager;HL.texturesLoadingManager.onStart=function(a,b,c){console.log("Started loading textures")};HL.texturesLoadingManager.onLoad=function(){console.log("Textures loading complete!");for(var a in HL.models)HL.materials[a].map=void 0!==HL.textures[a]?HL.textures[a]:null;HL.materials.sky.uniforms.map1.value=HL.textures.sky1;HL.materials.sky.uniforms.map2.value=HL.textures.sky2;HL.materials.sky.uniforms.map3.value=HL.textures.sky3;
HL.materials.water.material.uniforms.normalSampler.value=HL.textures.water;console.log("Textures assigned to materials\ndispatching HLAssetLoaded event");window.dispatchEvent(g)};HL.texturesLoadingManager.onProgress=function(a,b,c){HL.texturesLoaded=b;HL.totalTextures=c;console.log("Completed loading texture: "+a+".\nLoaded "+b+" of "+c+" files.")};HL.texturesLoadingManager.onError=function(a){console.error("There was an error loading texture "+a);alert("Textures: a loading error occurred. Please reload.")};
HL.modelsLoadingManager=new THREE.LoadingManager;HL.modelsLoadingManager.onStart=function(a,b,c){console.log("Started loading models")};HL.modelsLoadingManager.onLoad=function(){console.log("Models Loading complete!\ndispatching HLAssetLoaded event");window.dispatchEvent(g)};HL.modelsLoadingManager.onProgress=function(a,b,c){HL.modelsLoaded=b;HL.totalModels=c;console.log("Completed loading model: "+a+".\nLoaded "+b+" of "+c+" files.")};HL.modelsLoadingManager.onError=function(a){console.log("There was an error loading model "+
a);alert("Models: a loading error occurred. Please reload.")};null!==HL.audio&&(HL.audioLoader=new THREE.FileLoader,HL.audioLoader.setResponseType("blob"),HL.preloadDebounce=!0,HL.audioLoader.load(HL.audio,function(a){console.log("Audio Loading complete!\ndispatching HLAssetLoaded event");window.dispatchEvent(g)},function(a){a=new CustomEvent("audioProgress",{detail:a});window.dispatchEvent(a)},function(a){console.error("Audio: An error happened "+a);alert("Audio: a loading error occurred. Please reload.")}));
e();HL.lights.sun=new THREE.DirectionalLight(15663052,4);HL.lights.sun.color=HLC.horizon;HL.lights.sun.position.set(0,1999,100);HL.scene.add(HL.lights.sun);HL.lights.land=new THREE.DirectionalLight(16777215,1);HL.lights.land.position.set(0,-100,0);HL.lights.land.color=HLC.land;HL.scene.add(HL.lights.land);f();c();m();HL.sky=new THREE.Mesh(HL.geometries.sky,HL.materials.sky);HL.sky.name="sky";HL.scene.add(HL.sky);HL.land=new THREE.Mesh(HL.geometries.land,HL.materials.land);HL.land.name="land";HL.scene.add(HL.land);
HLE.MIRROR?(HL.sea=new THREE.Mesh(HL.geometries.sea,HL.materials.mirror.material),HL.sea.add(HL.materials.mirror)):HLE.WATER?(HL.sea=new THREE.Mesh(new THREE.PlaneBufferGeometry(HLE.WORLD_WIDTH,HLE.WORLD_WIDTH,16,16),HL.materials.water.material),HL.sea.add(HL.materials.water),HL.sea.rotateX(.5*-Math.PI)):HL.sea=new THREE.Mesh(HL.geometries.sea,HL.materials.sea);HL.sea.name="sea";HL.scene.add(HL.sea);HL.clouds=new THREE.Points(HL.geometries.clouds,HL.materials.clouds);HL.clouds.name="clouds";HL.clouds.frustumCulled=
!1;HL.scene.add(HL.clouds);a();n();window.addEventListener("HLAssetLoaded",b)}}}();
